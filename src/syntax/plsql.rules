S >>> { S } PLSQL_BLOCK
PLSQL_BLOCK >>> ANON_BLOCK

ANON_BLOCK >>>
declare
{ VARS }
BLOCK
/

VARS >>> { VARS } VAR

VAR >>> idt type { := EXPRESSION } ;

EXPRESSION >>> const <<< ! :=

EXPRESSION >>> idt <<< ! := <,< type <,< in

BLOCK >>> 
begin
STATEMENTS
end ;

STATEMENTS >>> { STATEMENTS } STATEMENT

STATEMENT >>>
for idt in { reverse } EXPRESSION .. EXPRESSION
loop
STATEMENTS
end loop ;

STATEMENT >>>
idt := EXPRESSION ;

EXPRESSION >>>
case EXPRESSION
CASE_STATEMENTS
{ else EXPRESSION }
end

CASE_STATEMENTS >>> { CASE_STATEMENTS } CASE_STATEMENT

CASE_STATEMENT >>> when EXPRESSION then EXPRESSION
